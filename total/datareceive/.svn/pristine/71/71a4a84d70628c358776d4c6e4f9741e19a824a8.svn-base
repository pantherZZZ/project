package com.yy.common.utils;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.yy.common.constant.MyConstants;

import sun.misc.BASE64Encoder;

public class HttpUtil {

	private static Log log = LogFactory.getLog(HttpUtil.class);

	public String openConnectionForGet(String url) throws Exception {

		BufferedReader in = null;
		String inputLine;
		String strReturn = "";

		try {
			URL urlAction = new URL(url);
			HttpURLConnection urlCon = (HttpURLConnection) urlAction.openConnection();
			urlCon.setConnectTimeout(MyConstants.HTTPConnectTimeout);
			urlCon.setReadTimeout(MyConstants.HTTPConnectTimeout);
			in = new BufferedReader(new InputStreamReader(urlCon.getInputStream()));
			while ((inputLine = in.readLine()) != null) {
				strReturn += inputLine;
			}
			// log.info(strReturn);
			return strReturn;
		} catch (Exception ex) {
			throw ex;
		} finally {
			if (in != null) {
				in.close();
				in = null;
			}
		}
	}

	public String openConnectionForPost_(String url, String params) throws Exception {

		BufferedReader in = null;
		String inputLine;
		String strReturn = "";

		try {
			// log.info("url:" + url + ";params:" + params);

			URL urlAction = new URL(url);
			HttpURLConnection urlCon = (HttpURLConnection) urlAction.openConnection();
			urlCon.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");

			urlCon.setDoOutput(true);
			urlCon.setDoInput(true);
			urlCon.setUseCaches(false);
			urlCon.setConnectTimeout(MyConstants.HTTPConnectTimeout);
			urlCon.setReadTimeout(MyConstants.HTTPConnectTimeout);

			urlCon.connect();
			OutputStream os = urlCon.getOutputStream();

			// os.write(params.getBytes("UTF-8"));// 传入参数
			os.write(params.getBytes());
			os.flush();
			os.close();

			in = new BufferedReader(new InputStreamReader(urlCon.getInputStream()));
			while ((inputLine = in.readLine()) != null) {
				strReturn += inputLine;
			}
			return strReturn;
		} catch (Exception ex) {
			throw ex;
		} finally {
			if (in != null) {
				in.close();
				in = null;
			}
		}
	}

	public String openConnectionForPost(String url, String params) throws Exception {

		BufferedReader in = null;
		String inputLine;
		String strReturn = "";

		try {
			// log.info("url:" + url + ";params:" + params);

			URL urlAction = new URL(url);
			HttpURLConnection urlCon = (HttpURLConnection) urlAction.openConnection();
			urlCon.setRequestMethod("POST");
			urlCon.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");

			urlCon.setDoOutput(true);
			urlCon.setDoInput(true);
			urlCon.setUseCaches(false);
			urlCon.setConnectTimeout(MyConstants.HTTPConnectTimeout);
			urlCon.setReadTimeout(MyConstants.HTTPConnectTimeout);

			urlCon.connect();
			OutputStream os = urlCon.getOutputStream();
			os.write(params.getBytes("UTF-8"));// 传入参数
			os.flush();
			os.close();

			in = new BufferedReader(new InputStreamReader(urlCon.getInputStream(), "UTF-8"));
			while ((inputLine = in.readLine()) != null) {
				strReturn += inputLine;
			}
			return strReturn;
		} catch (Exception ex) {
			throw ex;
		} finally {
			if (in != null) {
				in.close();
				in = null;
			}
		}
	}

	public void openConnectionForGetToImage(String url, HttpServletRequest request) throws Exception {
		// TODO Auto-generated method stub
		String idStudent = request.getParameter("idStudent");

		BufferedReader in = null;

		try {
			log.info(url);
			URL urlAction = new URL(url);
			HttpURLConnection urlCon = (HttpURLConnection) urlAction.openConnection();
			urlCon.setConnectTimeout(MyConstants.HTTPConnectTimeout);
			urlCon.setReadTimeout(MyConstants.HTTPConnectTimeout);
			in = new BufferedReader(new InputStreamReader(urlCon.getInputStream()));

			ByteArrayOutputStream outStream = new ByteArrayOutputStream();
			byte[] buffer = new byte[1024];
			int len = 0;
			while ((len = urlCon.getInputStream().read(buffer)) != -1) {
				outStream.write(buffer, 0, len);
			}
			byte[] btImg = outStream.toByteArray();

			if (null != btImg && btImg.length > 0) {
				// System.out.println("读取到：" + btImg.length + " 字节");
				log.info("读取到：" + btImg.length + " 字节");
				BASE64Encoder encoder = new BASE64Encoder();
				String base64_img = encoder.encode(btImg);

				WebApplicationContext applicationContext = WebApplicationContextUtils
						.getWebApplicationContext(request.getSession().getServletContext());
				// 微信保存照片
				// StudentService studentService = (StudentService)
				// applicationContext
				// .getBean("studentService");
				//
				// WStudent student = studentService.getObjectById(idStudent);
				// student.setHeadImage(base64_img);
				// studentService.saveOrUpdate(student);

				// request.getSession().setAttribute("wxLoginStudent", student);

			} else {
				System.out.println("没有从该连接获得内容");
				log.info("没有从该连接获得内容");
			}

		} catch (Exception ex) {
			throw ex;
		} finally {
			if (in != null) {
				in.close();
				in = null;
			}
		}
	}
}
